# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="/k3<Mcl8NX[Z<1N5lDB0Sq4WpoGThmbyI;_@tB/uYCox/`@8gNeQwSOLhs5H9R@J"

# Application context
application.context=/api/biq/v3.3.2

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
application.global=com.sentrana.biq.Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
application.router=biq.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
db.biq.driver=com.mysql.jdbc.Driver
db.biq.url="mysql://szhao:kq@prod-db.cerayj2ghxsp.us-east-1.rds.amazonaws.com:3306/RichsBIQ"

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

#Password Defaults

# mail server
smtp.host="10.46.33.25"

# application specific
application_id=13
unrestricted_admin_id=6

# Current supported types are xml and json.
biq.configuration.type = "xml"
# BIQ configuration file size limit, default is 1M.
biq.configurationManager.fileSizeLimit = 1
# default is 1M
HttpRequestSizeLimit = 1

ConfigSubFolderLocation="/conf/"
LoggerConfigSubFolderLocation="/bin/"
LogFolderPath=""
ApplicationID="11"
# If following is changed, then message in InvalidPasswordFormat of ApplicationErrorMessages may need to change
PasswordRegExp="^\\S*(?=\\S{8,})(?=\\S*[a-z])(?=\\S*[A-Z])(?=\\S*[\\d])(?=\\S*[\\W])\\S*$"
SessionTimeoutMinutes="120"
CommandTimeout="120"
ChartExportServiceURL="http://highcharts.sentrana.local/"
PivotExportServiceURL="http://highcharts.sentrana.local/grid-excel/generate"
pivot.export.inputFormSizeLimitInMB=10

# Email distribution
MailTemplatesRelRoot="Resources/MailTemplates"
MinimumPasswordLength="8"
MaximumPasswordLength="16"
SupportEmail="sysadmin@sentrana.com"
EmailSenderName="User Management Administrator"
PasswordResetEmailTemplate="Password_Reset_Email"
ForgotUsernameEmailTemplate="Forgot_Username_Email"
PasswordResetLinkTimeout="24"

# biq Plugin Integration
biqPluginPage="/biqParentSite/biq/biq_plugin.htm"

# Salesforce Integration
sf.integration.appName="biq"
sf.integration.appUrl="https://biq-dev.sentrana.com"
sf.integration.salesforceMainPage="biq/biq_plugin.htm"
sf.integration.redirectURI="/SalesforceService.svc/SalesforceCallback/"
sf.integration.sobjectsPath="services/data/v29.0/sobjects"
sf.integration.sentranaUserNameFieldName="sentrana_biq_user_name__c"

# Repository Manager
repoMan.BiqRepositoryServiceEndpoint="/BIQSvc/SqlGen.svc/"

# MongoDB-based metadata repository
# ~~~~~
# Provides the configuration for the MongoDB-based metadata repository.
# This setting is only necessary if a database MDR is being used
biq.use-mongodb-mdr = "true"

# MongoDB-based user management repository
um.data-services.type = "mongo"

mongodb-shared {
  host = "localhost"
  port = "27017"
  user = "siteUserAdmin"
  pass = "password"
}

mongodb-mdr {
  um = ${mongodb-shared}
  um.database = "um"

  biq = ${mongodb-shared}
  biq.database = "biq"
}

# Metadata cache
metadata-cache.use-cache = "true"
metadata-cache.type = "mongo"
metadata-cache.mongodb.maxSeqSize = "50000"

# Repository configuration storage could be mongo or file
biq.configurationManager.type="mongo"

# Dataset Configuration
dataset.nullValue="NULL"

# Mail sending date format
PasswordResetConfirmationMailDateFormat = "yyyy-MM-dd HH:mm"
# Application url to send with email
ApplicationUrl="http://localhost"
app.internal.error.message=true

#Export Chart Acceptable Http Content Types
exportChart.contentTypes=["image/png","image/jpeg","application/pdf", "application/xls"]
